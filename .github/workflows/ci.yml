name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  AWS_REGION: 'eu-central-1' # Default region

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    
    steps:
      # 1. Checkout code
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # 2. Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'
          cache: 'npm'
          cache-dependency-path: 'package-lock.json'

      # 3. Install dependencies
      - name: Install dependencies
        run: |
          npm install
          npm install jest --save-dev
        env:
          NODE_ENV: development

      # 4. Run tests
      - name: Run tests
        run: npm test -- --ci --coverage
        env:
          CI: true

      # 5. Build project
      - name: Build project
        run: |
          mkdir -p build
          npm run build || echo "Build command exited with code $?"
          if [ -z "$(ls -A build)" ]; then
            echo "No build output detected" > build/README.txt
          fi

      # 6. Debug build contents
      - name: Debug build contents
        run: |
          echo "Build directory contents:"
          ls -R build || echo "No build directory found"

      # 7. Upload build artifact (always upload, even if empty)
      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: build-output
          path: |
            build/
            coverage/
          if-no-files-found: warn
          retention-days: 5

  deploy:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
      # 1. Download build artifact
      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: build-output
          path: build
          if-no-files-found: error

      # 2. Debug downloaded files
      - name: Debug downloaded files
        run: |
          echo "Downloaded build contents:"
          ls -R build || echo "No files found in build folder"

      # 3. Configure AWS credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
          role-duration-seconds: 3600

      # 4. Validate build contents
      - name: Validate build contents
        run: |
          if [ -f build/index.html ] || [ -f build/main.js ]; then
            echo "Valid build detected"
          else
            echo "No deployable files found"
            exit 1
          fi

      # 5. Deploy to S3
      - name: Deploy to S3
        run: |
          aws s3 sync ./build s3://mypipelinebucket160000 \
            --delete \
            --cache-control "public, max-age=31536000" \
            --acl public-read

          echo "Deployment completed to:"
          aws s3 ls s3://mypipelinebucket160000 --recursive --human-readable
