name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'
          cache: 'npm'
          cache-dependency-path: 'package-lock.json'

      - name: Install dependencies
        run: npm ci
        env:
          NODE_ENV: production

      - name: Run tests
        run: |
          npm install -g jest
          npm test -- --ci --coverage
        env:
          CI: true

      - name: Build project
        run: |
          npm run build || echo "Build script completed"
          # Ensure build directory exists with at least one file
          mkdir -p build
          [ "$(ls -A build)" ] || { echo "No build files found!"; exit 1; }

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: build-output
          path: build/
          if-no-files-found: error
          retention-days: 5

  deploy:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: build-output
          path: build
          if-no-files-found: error

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-central-1
          role-duration-seconds: 3600

      - name: Verify AWS CLI
        run: aws --version

      - name: Deploy to S3
        run: |
          # Verify build contents
          echo "Build directory contents:"
          ls -R build/
          
          # Sync build files
          aws s3 sync ./build s3://mypipelinebucket160000 \
            --delete \
            --cache-control "public, max-age=31536000"